"use client";

import SubtitleTranslator from './SubtitleTranslator';
import LanguageChanger from './LanguageChanger';
import UnifiedFooter from './UnifiedFooter';
import Link from 'next/link';

interface HomePageProps {
  pageConfig: any;
  translations: any;
  locale: string;
}

export default function HomePage({ pageConfig, translations, locale }: HomePageProps) {
  const getLocalizedPath = (path: string) => {
    const cleanPath = path.startsWith('/') ? path.slice(1) : path;
    return `/${locale}/${cleanPath}`;
  };

  // 结构化数据
  const structuredData = {
    "@context": "https://schema.org",
    "@type": "SoftwareApplication",
    "name": translations.homepage?.seo?.structuredData?.name || "Subtitle Translator - Free Online SRT Translation Tool",
    "applicationCategory": "MultimediaApplication",
    "description": translations.homepage?.seo?.structuredData?.description || "Free online subtitle translator for SRT files. Convert subtitles between 100+ languages using Google Translate and OpenAI. No registration required.",
    "operatingSystem": "Web Browser",
    "url": `https://yourdomain.com${getLocalizedPath('/')}`,
    "offers": {
      "@type": "Offer",
      "price": "0",
      "priceCurrency": "USD"
    },
    "featureList": translations.homepage?.seo?.structuredData?.featureList || [
      "SRT file translation",
      "100+ languages support", 
      "Google Translate integration",
      "OpenAI translation engine",
      "Free unlimited usage",
      "No registration required"
    ]
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50">
      {/* 结构化数据 */}
      <script
        type="application/ld+json"
        dangerouslySetInnerHTML={{ __html: JSON.stringify(structuredData) }}
      />

      {/* Navigation */}
      <nav className="bg-white shadow-sm border-b border-gray-200">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            {/* Logo and Navigation Links */}
            <div className="flex items-center space-x-8">
              <Link href={`/${locale}`} className="text-xl font-bold text-gray-900 hover:text-blue-600 transition-colors">
                {translations.homepage?.navigation?.logo || translations.title || 'Subtitle Translator'}
              </Link>
              
              {/* Navigation links removed as requested */}
            </div>

            {/* Language Selector */}
            <div className="flex items-center">
              <LanguageChanger currentLocale={locale} />
            </div>
          </div>
        </div>
      </nav>

      {/* Hero Section */}
      <div className="relative overflow-hidden bg-gradient-to-r from-blue-600 to-purple-700 text-white">
        <div className="absolute inset-0 bg-black opacity-10"></div>
        <div className="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-24">
          <div className="text-center">
            <h1 className="text-4xl md:text-6xl font-bold mb-6 leading-tight">
              {translations.homepage?.hero?.title || translations.title}
            </h1>
            <p className="text-xl md:text-2xl mb-8 text-blue-100 max-w-3xl mx-auto">
              {translations.homepage?.hero?.description || translations.description}
            </p>
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        {/* Translator Section */}
        <div className="flex justify-center mb-16">
          <div className="w-full max-w-4xl">
            <SubtitleTranslator pageConfig={pageConfig} translations={translations} />
          </div>
        </div>

        {/* Core Advantages Section - benefits */}
        <section className="mb-16">
          <div className="text-center mb-12">
            <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
              {translations.benefits?.title || "Core Advantages"}
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              {translations.benefits?.subtitle}
            </p>
          </div>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {translations.benefits?.items &&
              Object.entries(translations.benefits.items).map(([key, item]: [string, any]) => (
                <div key={key} className="bg-white rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 p-8 border border-gray-100">
                  <div className="text-4xl mb-4 text-center">{item.icon}</div>
                  <h3 className="text-xl font-bold text-gray-900 mb-4 text-center">{item.title}</h3>
                  <p className="text-gray-600 leading-relaxed text-center">{item.description}</p>
                </div>
              ))}
          </div>
        </section>

        {/* Use Cases Section - useCases */}
        <section className="mb-16">
          <div className="text-center mb-12">
            <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
              {translations.useCases?.title || "Use Cases"}
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              {translations.useCases?.subtitle}
            </p>
          </div>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {translations.useCases?.items &&
              Object.entries(translations.useCases.items).map(([key, item]: [string, any]) => (
                <div key={key} className="bg-white rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 p-6 border border-gray-100">
                  <div className="text-3xl mb-4 text-center">{item.icon}</div>
                  <h3 className="text-lg font-bold text-gray-900 mb-3 text-center">{item.title}</h3>
                  <p className="text-gray-600 text-sm leading-relaxed text-center">{item.description}</p>
                </div>
              ))}
          </div>
        </section>

        {/* Free Service Section */}
        <section className="mb-16">
          <div className="text-center mb-12">
            <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
              {translations.freeService?.title || "Free Subtitle Translation Service"}
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              {translations.freeService?.subtitle}
            </p>
          </div>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {translations.freeService?.items &&
              Object.entries(translations.freeService.items).map(([key, item]: [string, any]) => (
                <div key={key} className="bg-yellow-50 rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 p-6 border border-yellow-200">
                  <div className="text-3xl mb-4 text-center">{item.icon}</div>
                  <h3 className="text-lg font-bold text-gray-900 mb-3 text-center">{item.title}</h3>
                  <p className="text-gray-600 text-sm leading-relaxed text-center">{item.description}</p>
                </div>
              ))}
          </div>
        </section>

        {/* Benefits and Use Cases Grid */}
        {((pageConfig.benefits && pageConfig.benefits.length > 0) || (pageConfig.useCases && pageConfig.useCases.length > 0)) && (
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-12">
            {/* Benefits Section */}
            {pageConfig.benefits && pageConfig.benefits.length > 0 && (
              <div className="bg-white rounded-2xl shadow-lg p-8">
                <h2 className="text-2xl font-bold text-gray-900 mb-6">
                  {translations.benefits?.title || 'Benefits'}
                </h2>
                <div className="space-y-4">
                  {pageConfig.benefits.map((benefit: any, index: number) => (
                    <div key={index} className="flex items-start space-x-3">
                      <div className="flex-shrink-0 w-6 h-6 bg-green-100 rounded-full flex items-center justify-center mt-1">
                        <svg className="w-4 h-4 text-green-600" fill="currentColor" viewBox="0 0 20 20">
                          <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                        </svg>
                      </div>
                      <div>
                        <h3 className="font-semibold text-gray-900">{benefit.title}</h3>
                        <p className="text-gray-600 text-sm">{benefit.description}</p>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            )}

            {/* Use Cases */}
            {pageConfig.useCases && pageConfig.useCases.length > 0 && (
              <div className="bg-white rounded-2xl shadow-lg p-8">
                <h2 className="text-2xl font-bold text-gray-900 mb-6">
                  {translations.useCases?.title || 'Use Cases'}
                </h2>
                <div className="space-y-4">
                  {pageConfig.useCases.map((useCase: any, index: number) => (
                    <div key={index} className="border-l-4 border-blue-400 pl-4">
                      <h3 className="font-semibold text-gray-900">{useCase.title}</h3>
                      <p className="text-gray-600 text-sm">{useCase.description}</p>
                    </div>
                  ))}
                </div>
              </div>
            )}
          </div>
        )}

        {/* FAQ Section */}
        {pageConfig.faq && pageConfig.faq.length > 0 && (
          <div className="mt-16">
            <div className="bg-white rounded-2xl shadow-lg p-8">
              <h2 className="text-3xl font-bold text-gray-900 mb-8 text-center">
                {translations.faq?.title || 'Frequently Asked Questions'}
              </h2>
              <div className="space-y-6">
                {pageConfig.faq.map((item: any, index: number) => (
                  <div key={index} className="border-b border-gray-200 pb-6 last:border-b-0">
                    <h3 className="text-lg font-semibold text-gray-900 mb-2">{item.question}</h3>
                    <p className="text-gray-600">{item.answer}</p>
                  </div>
                ))}
              </div>
            </div>
          </div>
        )}

        {/* Specialized Tools Section */}
        <div className="mb-16">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold text-gray-900 mb-4">
              {translations.specializedTools?.title || "Professional Subtitle Translation Tools"}
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              {translations.specializedTools?.subtitle || "Specialized translation services for different languages"}
            </p>
          </div>
          
          <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 max-w-4xl mx-auto">
            {[
              { code: 'en', name: 'english', color: 'blue' },
              { code: 'zh', name: 'chinese', color: 'red' },
              { code: 'es', name: 'spanish', color: 'yellow' },
              { code: 'fr', name: 'french', color: 'blue' },
              { code: 'pt', name: 'portuguese', color: 'green' }
            ].map((lang) => (
              <Link 
                key={lang.code}
                href={`/${locale}/${lang.name}-subtitle`}
                className={`bg-white hover:bg-${lang.color}-50 rounded-xl shadow-md hover:shadow-lg transition-all p-4 text-center`}
              >
                <div className="text-gray-900 font-medium">
                  {translations.specializedTools?.languageButtons?.[lang.name] || lang.name.charAt(0).toUpperCase() + lang.name.slice(1)}
                </div>
              </Link>
            ))}
          </div>
        </div>

        {/* CTA Section */}
        {pageConfig.cta && (
          <div className="mt-16 bg-gradient-to-r from-blue-600 to-purple-700 rounded-2xl shadow-2xl p-12 text-center text-white">
            <h2 className="text-3xl font-bold mb-4">{pageConfig.cta.title}</h2>
            <p className="text-xl text-blue-100 mb-8">{pageConfig.cta.description}</p>
          </div>
        )}
      </div>

      {/* Footer */}
      <UnifiedFooter translations={translations} />
    </div>
  );
} 